#!/bin/bash
sudo dpkg --configure -a &>/dev/null
########
# INFO #
########


##########
# CONFIG #
##########

DATE_SETUP="$(date +%s)"


#############
# FUNCTIONS #
#############

wsl_stop(){
  echo "==> la consola va a cerrarse"
  read a
  sudo killall -r '.*'
}

wsl_update(){
  if [[ -d /c/wsl/user/ccktools ]]; then
    cd /c/wsl/user/ccktools
    git pull
    cd
  fi
  # check_version
}

# update_repo() {
#   if [ -d $HOME/ccktools ]; then
#     cd $HOME/ccktools/
#     if git pull
#       then
#         echo "==> ccktools updated"
#       else
#         echo "==> ccktools update failed"
#     fi
#     # check_version
#   fi
# }

check_version(){
  echo "==> Online version:" $(curl -fsSL https://raw.githubusercontent.com/carcheky/ccktools/master/config/version?\${DATE_SETUP}) 2>>/dev/null
  echo "==> Local version:" $(cat /c/wsl/user/ccktools/config/version  2>>/dev/null)
}

set_wslconf() {
  if [ -f /etc/wsl.conf ]; then
    echo "==> /etc/wsl.conf encontrado"
    return
  fi
  if [ ! -f /etc/wsl.conf ]; then
    echo "==> Creando /etc/wsl.conf y saliendo"
    wget https://raw.githubusercontent.com/carcheky/ccktools/master/config/wsl.conf
    sudo mv -f wsl.conf /etc/
    wsl_stop
  fi
}

launcher_dirs(){
  # echo "==> quieres instalar los scripts personalizados? (y/n)"
  # read WSL_SETDIRS
  # if [ ${WSL_SETDIRS} = "y" ]; then
    echo "==> wsl setdirs"
    set_dirs
    create_links
  # fi
}

set_dirs() {
    mkdir -p '/c/wsl/'
    mkdir -p '/c/wsl/sites'
    mkdir -p '/c/wsl/user'
    mkdir -p '/c/wsl/error'
    mkdir -p '/c/wsl/log'
    sudo chown -R user:user '/c/wsl/'
    cd '/c/wsl/user'
    git clone https://github.com/carcheky/ccktools.git
  if [ ! -d /desadrupal ]; then
    sudo mkdir /desadrupal
  fi
  if [ ! -d /desadrupal8 ]; then
    sudo mkdir /desadrupal8
  fi
}

create_links() {
  if [ -d /c/wsl/user/ccktools ]; then

    sudo ln -s /c/wsl/user/ccktools/bin  $HOME
    sudo ln -s /c/wsl/user/ccktools  $HOME

    # if ! grep -q "source $HOME/ccktools/.ccktools" $HOME/.bashrc ; then
    #   echo "source $HOME/ccktools/.ccktools" >> $HOME/.bashrc
    # fi

    # if -f "$HOME/.zshrc" ; then
    #   if ! grep -q "source $HOME/ccktools/.ccktools" $HOME/.zshrc ; then
    #     echo "source $HOME/ccktools/.ccktools" >> $HOME/.zshrc
    #   fi
    # fi
    sudo apt install dos2unix -y 2>/dev/null

    find $HOME/bin/ -type f -exec chmod +x {} \;
    find $HOME/bin/ -type f -exec dos2unix {} \;
  fi
}

zsh_install(){
  # echo "==> quieres instalar zsh? (y/n)"
  # read WSL_ZSH
  # if [ ${WSL_ZSH} = "y" ]; then
      sudo apt install git -y
      sudo apt install nodejs -y
      sudo apt install npm -y
      sudo rm -fr $HOME/.oh-my-zsh
      sudo apt install zsh zsh-doc zsh-common -y

      sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh?\${DATE_SETUP})"

      # sudo chown -R user:user $HOME
      # sudo chown -R root:root $HOME/.oh-my-zsh
      # sudo chmod -R 777 $HOME/.z*
      # compaudit | xargs chmod g-w,o-w

      if ! grep -q "bash -c -l zsh; exit" $HOME/.bashrc ; then
        sudo echo "bash -c -l zsh; exit" >> $HOME/.bashrc
      fi

      sudo chmod 666 $HOME/.zshrc
      sudo chown user:user $HOME/.zsh_history
      # if ! grep -q "export PATH=$HOME/bin:\$PATH" $HOME/.zshrc ; then
      #   sudo echo "export PATH=$HOME/bin:\$PATH" >> $HOME/.zshrc
      # fi

      if ! grep -q "source $HOME/ccktools/.ccktools" $HOME/.zshrc ; then
        sudo echo "source $HOME/ccktools/.ccktools" >> $HOME/.zshrc
        sed -i 's/source \/home\/user\/ccktools\/.ccktools/# source \/home\/user\/ccktools\/.ccktools/g' $HOME/.bashrc
        cat $HOME/.bashrc | grep "# source /home/user/ccktools/.ccktools"
      fi

      if ! grep -q "plugins=(git z ubuntu vscode)" $HOME/.zshrc ; then
        sed -i 's/plugins=(git)/plugins=(git z ubuntu vscode)/g' $HOME/.zshrc && cat .zshrc | grep git
      fi
      # if ! grep -q "PATH=\"\$HOME/.config/composer/vendor/bin:\$PATH\"" $HOME/.zshrc ; then
      #   echo "PATH=\"\$HOME/.config/composer/vendor/bin:\$PATH\"">> $HOME/.zshrc
      # fi
  # fi
}


lamp_install(){
  # echo "==> quieres instalar lamp? (y/n)"
  # read WSL_LAMP
  # if [ ${WSL_LAMP} = "y" ]; then
    sudo apt install -y apache2 php
    sudo apt install -y php7.2-fpm libapache2-mod-php7.2 php7.2 php7.2-curl php7.2-gd php7.2-mbstring  php7.2-mysql php7.2-xml php7.2-zip php7.2-common

    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
    sudo apt install -y mysql-server

    sudo service apache2 stop & sudo service mysql stop

    sudo chmod 777 -R /var/cache/debconf

    sudo APP_PASS="root"
    sudo ROOT_PASS="root"
    sudo APP_DB_PASS="root"

    sudo apt clean -y
    sudo apt autoclean -y
    sudo dpkg --configure -a
    sudo apt autoremove -y

    sudo find /etc/php/ -name php.ini -exec sed -i 's/post_max_size = 8M/post_max_size = 8G/g' {} \;
    sudo find /etc/php/ -name php.ini -exec sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 2G/g' {} \;
    sudo find /etc/php/ -name php.ini -exec sed -i 's/memory_limit = 128M/memory_limit = 2G/g' {} \;

    sudo chmod -R 777 /etc/apache2
    sudo chmod 777 /etc/apache2/apache2.conf
    sudo chmod 777 /etc/apache2/mods-available/dir.conf
    sudo usermod -d /var/lib/mysql/ mysql
    sudo useradd -g www-data user

if ! grep -q "AcceptFilter http none"  /etc/apache2/apache2.conf ; then

sudo echo "
Servername localhost
AcceptFilter http none
AcceptFilter https none

<Directory /c/wsl/sites>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
</Directory>
" >>  /etc/apache2/apache2.conf
fi

if ! grep -q "DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm" /etc/apache2/mods-available/dir.conf ; then
sudo echo "
<IfModule mod_dir.c>
DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
</IfModule>
" > /etc/apache2/mods-available/dir.conf 
fi


    sudo apt install php-mbstring -y
    sudo apt install php-curl -y
    sudo apt install zip php-zip unzip -y
    sudo apt install mcrypt -y
    sudo apt install composer -y

    sudo phpenmod mcrypt
    sudo phpenmod zip
    sudo phpenmod mbstring

    sudo a2enmod rewrite
    sudo a2enmod vhost_alias

    composer global require hirak/prestissimo
    composer global require drush/drush:^8
    $HOME/.config/composer/vendor/bin/drush init -n

    # if ! grep -q "PATH=\"\$HOME/.config/composer/vendor/bin:\$PATH\"" $HOME/.bashrc ; then
    #   echo "PATH=\"\$HOME/.config/composer/vendor/bin:\$PATH\"">> $HOME/.bashrc
    # fi

    sudo service apache2 stop & sudo service mysql stop
    sudo service apache2 start & sudo service mysql start


    echo "==> Usa HeidiSQL para gestionar las bases de datos https://www.heidisql.com/"
    echo "==> Server:     localhost "
    echo "==> User:       root"
    echo "==> Password:   root"
  # fi
}


ubuntu_update(){
  # echo "==> ubuntu_update ? (y/n)"
  # read WSL_UPDATE_UBUNTU
  # if [ ${WSL_UPDATE_UBUNTU} = "y" ]; then
    echo "==> wsl ubuntu_update"
    echo "==> actualizando fuentes..."
    sudo apt update 2>/dev/null

    echo "==> actualizando paquetes..."
    sudo apt upgrade -y 2>/dev/null
  # fi
}

################
# MAIN PROGRAM #
################


set_wslconf
rm -fr .wget-hsts
sudo dpkg --configure -a

# check_version

if [ -d /c/wsl ] ; then
  mkdir -p '/c/wsl/error'
  echo "======================">/c/wsl/error/error-ccktools.log
fi
echo "${DATE_SETUP}">>/c/wsl/error/error-ccktools.log
echo "======================">>/c/wsl/error/error-ccktools.log
echo "==> wsl_update" >>/c/wsl/error/error-ccktools.log
wsl_update 2>>/c/wsl/error/error-ccktools.log

echo "==> ubuntu_update" >>/c/wsl/error/error-ccktools.log
ubuntu_update 2>>/c/wsl/error/error-ccktools.log

echo "==> launcher_dirs" >>/c/wsl/error/error-ccktools.log
launcher_dirs 2>>/c/wsl/error/error-ccktools.log

echo "==> lamp_install" >>/c/wsl/error/error-ccktools.log
lamp_install 2>>/c/wsl/error/error-ccktools.log

echo "==> zsh_install" >>/c/wsl/error/error-ccktools.log
zsh_install 2>>/c/wsl/error/error-ccktools.log
create_links &>/dev/null

rm $HOME/wsl-setu* &>/dev/null

sudo apt install figlet -y
figlet "todo va bien"
sleep 5
wsl_stop

