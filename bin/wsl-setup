#!/bin/bash

########
# INFO #
########

echo "==> VERSIÓN 2.01"

##########
# CONFIG #
##########



#############
# FUNCTIONS #
#############

wsl_stop(){
  sudo killall -r '.*'
}

wsl_update(){
  if [[ -d /c/wsl/user/ccktools ]]; then
    cd /c/wsl/user/ccktools
    git pull
    cd
  fi
}

set_wslconf() {
  if [ -f /etc/wsl.conf ]; then
    echo "==> /etc/wsl.conf encontrado"
    return
  fi
  if [ ! -f /etc/wsl.conf ]; then
    echo "==> Creando /etc/wsl.conf y saliendo"
    wget https://raw.githubusercontent.com/carcheky/ccktools/master/config/wsl.conf
    sudo mv -f wsl.conf /etc/
    echo "==> La consola se cerrará, ábrala y vuelva a ejecutar la misma operación"
    read a
    wsl_stop
  fi
}

set_dirs() {
  if [ -d /c/wsl/ ]; then
    echo "==> Existe la ruta /c/wsl"
    return
  fi
  if [ ! -d /c/wsl/ ]; then
    sudo mkdir '/c/wsl/'
    sudo mkdir '/c/wsl/sites'
    sudo mkdir '/c/wsl/user'
    sudo chown -R user:user '/c/wsl/'
    cd '/c/wsl/user'
    git clone https://github.com/carcheky/ccktools.git
  fi
}

update_repo() {
  if [ -d ~/ccktools ]; then
    cd ~/ccktools/
    if git pull
      then
        echo "==> ccktools updated"
      else
        echo "==> ccktools update failed"
    fi
  fi
}

create_links() {
  if [ -d /c/wsl/user/ccktools ]; then
    
    sudo ln -s /c/wsl/user/ccktools/bin  ~
    sudo ln -s /c/wsl/user/ccktools  ~

    if ! grep -q "source ~/ccktools/.ccktools" ~/.bashrc ; then
      echo "source ~/ccktools/.ccktools" >> ~/.bashrc
    fi

    if ! grep -q "source ~/ccktools/.ccktools" ~/.zshrc ; then
      echo "source ~/ccktools/.ccktools" >> ~/.zshrc
    fi

    sudo apt install dos2unix -y 2>/dev/null
    
    find ~/bin/ -type f -exec chmod +x {} \;
    find ~/bin/ -type f -exec dos2unix {} \;
  fi
}

zsh_install(){
    sudo apt install git -y
    sudo apt install npm -y
    rm -fr ~/.oh*
    sudo apt install zsh zsh-doc zsh-common -y
    
    sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

    # sudo chown -R user:user ~
    # sudo chown -R root:root ~/.oh-my-zsh
    # sudo chmod -R 777 ~/.z*
    # compaudit | xargs chmod g-w,o-w

    if ! grep -q "bash -c -l zsh" ~/.bashrc ; then
        echo "bash -c -l zsh" >> ~/.bashrc 
    fi
    
    if ! grep -q "export PATH=~/bin:\$PATH" ~/.zshrc ; then
      echo "export PATH=~/bin:\$PATH" >> ~/.zshrc
    fi

}

lamp_install(){
    
  sudo apt install -y apache2 php
  sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
  sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
  sudo apt install -y mysql-server

  sudo service apache2 stop & sudo service mysql stop

  sudo chmod -R /var/cache/debconf

  sudo APP_PASS="root"
  sudo ROOT_PASS="root"
  sudo APP_DB_PASS="root"

  sudo apt clean -y
  sudo apt autoclean -y
  sudo dpkg --configure -a
  sudo apt autoremove -y
 
  sudo find /etc/php/ -name php.ini -exec sed -i 's/post_max_size = 8M/post_max_size = 8G/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 2G/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/memory_limit = 128M/memory_limit = 2G/g' {} \;

  sudo echo "AcceptFilter https none" >> /etc/apache2/apache2.conf
  echo "==> install heidisql to mysql gui"
}


wsl_install_reset(){
  echo "==> quieres reiniciar todo? (y/n)"
  read WSL_RESET
  if [ "$WSL_RESET" = "y" ]; then
    echo "==> wsl RESET"
    sudo rm -fr /etc/wsl.conf 
    sudo rm -fr /c/wsl
    sudo rm -fr ~/bin 
    sudo rm -fr ~/ccktools
    sudo rm -fr .config/
    echo "==> borranzo zsh"
    sudo apt remove zsh -y
    rm -fr ~/.z*
    rm -fr ~/.oh*
    sudo apt autoremove -y
    vim ~/.bashrc
    echo "==> la consola se cerrará ahora"
    read a
    wsl_stop
  fi
}

ubuntu_update(){
  echo "==> actualizando fuentes..." 
  sudo apt update 2>/dev/null

  echo "==> actualizando paquetes..." 
  sudo apt upgrade -y 2>/dev/null
}

################
# MAIN PROGRAM #
################


set_wslconf
rm -fr .wget-hsts
sudo dpkg --configure -a
wsl_update

echo "==> ubuntu_update ? (y/n)"
read WSL_UPDATE_UBUNTU
if [ ${WSL_UPDATE_UBUNTU} = "y" ]; then
  echo "==> wsl setdirs"
  ubuntu_update
fi

wsl_install_reset

echo "==> quieres instalar los scripts personalizados? (y/n)"
read WSL_SETDIRS
if [ ${WSL_SETDIRS} = "y" ]; then
  echo "==> wsl setdirs"
  set_dirs
  create_links
fi

echo "==> quieres instalar zsh? (y/n)"
read WSL_ZSH
if [ ${WSL_ZSH} = "y" ]; then
  zsh_install
fi

echo "==> quieres instalar lamp? (y/n)"
read WSL_LAMP
if [ ${WSL_LAMP} = "y" ]; then
  lamp_install
fi   
