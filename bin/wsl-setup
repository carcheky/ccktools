#!/bin/bash
sudo dpkg --configure -a &>/dev/null
########
# INFO #
########

##########
# CONFIG #
##########

BASE_PATH="/mnt/c"
BASE_PATH_WSL="${BASE_PATH}/wsl"

DATE_SETUP="$(date +%s)"
NEW_THEME=robbyrussell

#############
# FUNCTIONS #
#############

wsl_stop() {
  echo "==> la consola va a cerrarse"
  read a
  sudo killall -r '.*'
}

wsl_update() {
  if [[ -d ${BASE_PATH_WSL}/user/ccktools ]]; then
    cd ${BASE_PATH_WSL}/user/ccktools
    git pull
    cd
  fi
}

check_version() {
  echo "==> Online version:" $(curl -fsSL https://raw.githubusercontent.com/carcheky/ccktools/master/config/version?\${DATE_SETUP}) 2>>/dev/null
  echo "==> Local version:" $(cat ${BASE_PATH_WSL}/user/ccktools/config/version 2>>/dev/null)
}

set_wslconf() {
  if [ -f /etc/wsl.conf ]; then
    echo "==> /etc/wsl.conf encontrado"
    return
  fi
  if [ ! -f /etc/wsl.conf ]; then
    echo "==> Creando /etc/wsl.conf y saliendo"
    wget https://raw.githubusercontent.com/carcheky/ccktools/master/config/wsl.conf
    sudo mv -f wsl.conf /etc/
    wsl_stop
  fi
}

launcher_dirs() {
  echo "==> wsl setdirs"
  set_dirs
  create_links
}

set_dirs() {
  mkdir -p "${BASE_PATH_WSL}/"
  mkdir -p "${BASE_PATH_WSL}/sites"
  mkdir -p "${BASE_PATH_WSL}/user"
  mkdir -p "${BASE_PATH_WSL}/error"
  mkdir -p "${BASE_PATH_WSL}/log"
  sudo chown -R user:user "${BASE_PATH_WSL}/user"
  cd "${BASE_PATH_WSL}/user"
  git clone https://github.com/carcheky/ccktools.git
}

create_links() {
  if [ -d ${BASE_PATH_WSL}/user/ccktools ]; then
    sudo ln -s ${BASE_PATH_WSL}/user/ccktools/bin $HOME
    sudo ln -s ${BASE_PATH_WSL}/user/ccktools $HOME
    find $HOME/bin/ -type f -exec chmod +x {} \;
    find $HOME/bin/ -type f -exec dos2unix {} \;
  fi
}

zsh_install() {
  sudo apt install zsh zsh-doc zsh-common -y
  cd $HOME
  curl -Lo install.sh https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
  sed -i 's/zsh -l/ls/g' $HOME/install.sh
  sed -i 's/read opt/opt\=y/g' $HOME/install.sh
  sudo chmod +x $HOME/install.sh
  sudo rm -fr $HOME/.oh-my-zsh
  sudo sh -c $HOME/install.sh
  sudo rm $HOME/install.sh

  BASHRC_INIT_COMMAND="/home/user/bin/wsl-update; bash -c -l zsh; exit"
  if ! grep -q "${BASHRC_INIT_COMMAND}" $HOME/.bashrc; then
    sudo echo "${BASHRC_INIT_COMMAND}" >>$HOME/.bashrc
  fi

  if [ -f $HOME/.zshrc ]; then
    sudo chmod 666 $HOME/.zshrc
    sudo chown user:user $HOME/.zsh_history

    if ! grep -q "source $HOME/ccktools/.ccktools" $HOME/.zshrc; then
      sudo echo "source $HOME/ccktools/.ccktools" >>$HOME/.zshrc
      sed -i 's/source \/home\/user\/ccktools\/.ccktools/# source \/home\/user\/ccktools\/.ccktools/g' $HOME/.bashrc
      cat $HOME/.bashrc | grep "# source /home/user/ccktools/.ccktools"
    fi

    if ! grep -q "plugins=(git composer z ubuntu vscode)" $HOME/.zshrc; then
      sed -i 's/plugins=(git)/plugins=(git composer z ubuntu vscode)/g' $HOME/.zshrc && cat .zshrc | grep git
    fi
  fi
  # if ! grep -q 'ZSH_THEME="robbyrussell"' $HOME/.zshrc ; then
  #   sed -i 's/ZSH_THEME=\"robbyrussell\"/ZSH_THEME="robbyrussell"/g' $HOME/.zshrc && cat .zshrc | grep ZSH_THEME
  # fi

  touch $HOME/.z
}

lamp_install() {
  sudo apt install -y apache2 php
  sudo apt install -y php7.2-fpm libapache2-mod-php7.2 php7.2 php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xml php7.2-zip php7.2-common

  sudo debconf-set-selections <<<'mysql-server mysql-server/root_password password root'
  sudo debconf-set-selections <<<'mysql-server mysql-server/root_password_again password root'
  sudo apt install -y mysql-server

  sudo service apache2 stop &
  sudo service mysql stop

  sudo chmod -R 777 /var/cache/debconf

  APP_PASS="root"
  ROOT_PASS="root"
  APP_DB_PASS="root"

  sudo apt clean -y
  sudo apt autoclean -y
  sudo dpkg --configure -a
  sudo apt autoremove -y

  sudo find /etc/php/ -name php.ini -exec sed -i 's/post_max_size = 8M/post_max_size = 8G/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 2G/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/memory_limit = 128M/memory_limit = 2G/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/max_execution_time = 30/max_execution_time = 300 #/g' {} \;
  sudo find /etc/php/ -name php.ini -exec sed -i 's/max_input_time = 60/max_input_time = 600 #/g' {} \;

  sudo chmod -R 777 /etc/apache2
  sudo chmod 777 /etc/apache2/apache2.conf
  sudo chmod 777 /etc/apache2/mods-available/dir.conf
  sudo usermod -d /var/lib/mysql/ mysql
  sudo useradd -g www-data user
  sudo adduser user www-data

  if ! grep -q "AcceptFilter http none" /etc/apache2/apache2.conf; then

    sudo echo "
Servername localhost
AcceptFilter http none
AcceptFilter https none

<Directory ${BASE_PATH_WSL}/sites>
Options Indexes FollowSymLinks
AllowOverride All
Require all granted
</Directory>
" >>/etc/apache2/apache2.conf
  fi

  if ! grep -q "DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm" /etc/apache2/mods-available/dir.conf; then
    sudo echo "
<IfModule mod_dir.c>
DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
</IfModule>
" >/etc/apache2/mods-available/dir.conf
  fi

  sudo apt install php-mbstring -y
  sudo apt install php-curl -y
  sudo apt install zip php-zip unzip -y
  sudo apt install mcrypt -y
  sudo apt install composer -y

  sudo phpenmod mcrypt
  sudo phpenmod zip
  sudo phpenmod mbstring

  sudo a2enmod rewrite
  sudo a2enmod vhost_alias

  composer global require hirak/prestissimo
  composer global require drush/drush:^8
  $HOME/.config/composer/vendor/bin/drush init -n

  sudo service apache2 stop &
  sudo service mysql stop
  sudo service apache2 start &
  sudo service mysql start

  echo "==> Usa HeidiSQL para gestionar las bases de datos https://www.heidisql.com/"
  echo "==> Server:     localhost "
  echo "==> User:       root"
  echo "==> Password:   root"
}

ubuntu_update() {
  echo "==> wsl ubuntu_update"
  echo "==> actualizando fuentes..."
  sudo apt update 2>/dev/null

  echo "==> actualizando paquetes..."
  sudo apt upgrade -y 2>/dev/null

  sudo apt install dos2unix -y 2>/dev/null
  sudo apt install git nodejs npm fonts-powerline -y
  sudo apt install figlet -y
}

################
# MAIN PROGRAM #
################

# set_wslconf
rm -fr .wget-hsts
sudo dpkg --configure -a
sudo mkdir -p /mnt/c/wsl/error
sudo touch /mnt/c/wsl/error/error-ccktools.log
sudo chmod -R 777 /mnt/c/wsl/user
sudo chown -R user:user /mnt/c/wsl/user

if [ -d ${BASE_PATH_WSL} ]; then
  mkdir -p "${BASE_PATH_WSL}/error"
  echo "======================" >${BASE_PATH_WSL}/error/error-ccktools.log
fi
echo "${DATE_SETUP}" >>${BASE_PATH_WSL}/error/error-ccktools.log
echo "======================" >>${BASE_PATH_WSL}/error/error-ccktools.log
echo "==> wsl_update" >>${BASE_PATH_WSL}/error/error-ccktools.log
wsl_update 2>>${BASE_PATH_WSL}/error/error-ccktools.log

echo "==> ubuntu_update" >>${BASE_PATH_WSL}/error/error-ccktools.log
ubuntu_update 2>>${BASE_PATH_WSL}/error/error-ccktools.log

echo "==> launcher_dirs" >>${BASE_PATH_WSL}/error/error-ccktools.log
launcher_dirs 2>>${BASE_PATH_WSL}/error/error-ccktools.log

echo "==> lamp_install" >>${BASE_PATH_WSL}/error/error-ccktools.log
lamp_install 2>>${BASE_PATH_WSL}/error/error-ccktools.log

echo "==> zsh_install" >>${BASE_PATH_WSL}/error/error-ccktools.log
zsh_install 2>>${BASE_PATH_WSL}/error/error-ccktools.log
create_links &>/dev/null

rm $HOME/wsl-setu* &>/dev/null

figlet "todo va bien"
sleep 5
wsl_stop
