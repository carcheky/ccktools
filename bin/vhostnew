#!/bin/bash
# sudo rm -fr mnt testing /etc/apache2/sites*/testing*
ls -la /etc/apache2/sites-enabled

# VARS
# [] && false || true
# [!] && true || false
# ask for var
read_site(){
    until [ ! -z ${SITE} ] 
    do
        echo "Escribe el nombre del sitio a gestionar:"
        read SITE
    done    
}
read_install_type(){
    until [ ! -z ${INSTALL} ] 
    do
        echo "Escoge el tipo de instalacion:"
        read INSTALL
    done    
}
echo -e "\n\n==============================================================\n==============================================================\n";

# check vhost name
[[ $1 ]] && SITE=$1 || read_site;
# [[ $1 ]] && SITE=$1 || echo "Escribe el nombre del sitio:" && until ${SITE} do read SITE done;

echo -e "\n==============================================================\n==============================================================";

# check installation type
[[ $2 ]] && INSTALL=$2 || echo -e "
==>      1) Drupal
==>      0) Ninguna, sólo vhost
==> borrar) escribe <borrar> para borrar esta instalacion\n" && read_install_type;

echo -e "\n==============================================================\n==============================================================\n\n";

# set vars
SITES_FOLDER="/mnt/c/wsl/sites"
CONF_SITES_AVAILABLE="/etc/apache2/sites-available/${SITE}.conf"
CONF_SITES_ENABLED="/etc/apache2/sites-enabled/${SITE}.conf"
CONF_SITE_FOLDER="${SITES_FOLDER}/${SITE}"

#print options
echo -e "\n\n==============================================================\n==============================================================\n";
[[ $SITE ]] && echo -e "==> SITE: $SITE";
[[ $INSTALL ]] && echo -e "\n==> INSTALL: $INSTALL";
echo -e "\n==============================================================\n==============================================================\n\n";




#FUNCTIONS


# create folder
function newfolder(){
    echo -e "\n\n==============================================================\n==============================================================";
    if [[ -d ${CONF_SITE_FOLDER} ]]; then
        echo -e "Paso 1 ==> Existe la ruta, continuando."
    else
        echo -e "Paso 1 ==> NO existe la ruta, creandola..."
        mkdir -p ${CONF_SITE_FOLDER}
        mkdir -p ${CONF_SITE_FOLDER}/web
        mkdir -p ${CONF_SITE_FOLDER}/log
        sudo chmod -R 777 ${CONF_SITE_FOLDER}
        sudo chown -R user:user ${CONF_SITE_FOLDER}
    fi
    echo -e "==============================================================";
    
}

# create vhost
function newvhost(){
    if [[ $SITE ]]; then #comprueba si existe la ruta
        
        if [ -f ${CONF_SITES_AVAILABLE} ]; then
            echo -e "Paso 2 ==> Existe la configuracion \n${CONF_SITES_AVAILABLE}, continuando."
        else
            echo -e "Paso 2 ==> NO existe la configuracion \n${CONF_SITES_AVAILABLE}, \n==>creandola..."
            sudo rm ${CONF_SITES_AVAILABLE} 2>/dev/null
            sudo touch ${CONF_SITES_AVAILABLE} 2>/dev/null
            
            sudo echo "
<VirtualHost *:80 *:8888>
    ServerName ${SITE}
    ServerAdmin webmaster@${SITE}.test
    DocumentRoot ${CONF_SITE_FOLDER}/web
    RewriteEngine On
    RewriteOptions inherit
    CustomLog ${CONF_SITE_FOLDER}/log/${SITE}.log combined
</VirtualHost>
            " | sudo tee --append ${CONF_SITES_AVAILABLE}
            sudo a2ensite ${SITE}.conf
            sudo service apache2 reload
            sudo service apache2 restart
        fi
        echo -e "==============================================================";
    fi
}

# install_drupal
function install_drupal(){
    echo -e "\n==> Instalando Drupal:\n"
    cd ${CONF_SITE_FOLDER}
    if [[ ! -f "./web/sites/default/settings.php" ]]; then
        echo -e "==> Bajando drupal core...\n"
        drush -y dl drupal --drupal-project-rename="web"
        sudo chmod -R 777 ${CONF_SITE_FOLDER}
        sudo chown -R user:user ${CONF_SITE_FOLDER}
        cd web
        composer require drupal/admin_toolbar --no-update
        composer require drupal/backup_migrate --no-update
        composer require drupal/ctools --no-update
        composer require drupal/devel --no-update
        composer require drupal/pathauto --no-update
        composer update
        git clone https://github.com/carcheky/druparcheky_profile.git profiles/druparcheky && rm -fr profiles/druparcheky/.git
        drush si druparcheky --db-url=mysql://root:root@localhost/${SITE} --account-name=admin --account-mail=admin@${SITE}.test --account-pass=admin --site-name=${SITE} --site-mail=${SITE}@${SITE}.test -y
        # drush si minimal --db-url=mysql://root:root@localhost/${SITE} -y
    else
        echo -e "==> Existe una isntalaciรณn activa, bรณrrala manualmente para usar este script"
    fi
    echo -e "==============================================================";
}

# install_selector
function install_selector(){
    if [ ${INSTALL} ]; then
        echo -e "Paso 3 ==> Ejecutando tipo de instalacion...."
        
        case ${INSTALL} in
            1)
                install_drupal;
            ;;
            0)
                echo -e "Ninguna, solo vhost"
                echo "hola ${SITE}" >>/mnt/c/wsl/sites/${SITE}/web/index.html
            ;;
            borrar)
                echo "borrando instalacion ${SITE}"
                sudo rm -fr /etc/apache2/sites-*/${SITE}* /mnt/c/wsl/sites/${SITE}
            ;;
            *)
                echo -e "opcion incorrecta, instalamos solo vhost"
            ;;
        esac
    fi
    echo -e "==============================================================";
}

# final message
function finalmessage(){
    echo -e "\n\n==============================================================\n==============================================================\n";
    echo -e "\n==> add 127.0.0.1 ${SITE} to hosts file & flush dns\n (recommended http://www.abelhadigital.com/hostsman/)"
    echo -e "\n==> http://${SITE}:8888/user\n"
    echo -e "\n\n==============================================================\n==============================================================\n";
}






# LOGIC

[[ ${INSTALL} = "borrar" ]] && echo "omitiendo" || sudo service mysql start 2>/dev/null
[[ ${INSTALL} = "borrar" ]] && echo "omitiendo" || sudo service apache2 start 2>/dev/null
[[ ${INSTALL} = "borrar" ]] && echo "omitiendo" || newfolder;
[[ ${INSTALL} = "borrar" ]] && echo "omitiendo" || newvhost;
install_selector;
[[ ${INSTALL} = "borrar" ]] && echo "omitiendo" || finalmessage;
